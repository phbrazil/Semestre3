/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Vendas;

import View.Produtos.CadastroProdutosTela;
import Controller.Produtos.AtualizarListaCarrinho;
import DAO.Vendas.ItemVenda;
import DAO.Vendas.NovaVenda;
import Mock.CadastrarCliente;
import Mock.CadastrarProduto;
import Mock.VendasCanceladasEfetuadas;
import Mock.CadastrarProduto;
import Mock.VendasMock;
import Model.Clientes.Clientes;
import Model.Produtos.Produtos;
import Model.Vendas.Vendas;
import DAO.Clientes.CPFlienteVenda;
import DAO.Produtos.ProdutoVenda;
import View.Clientes.CadastroClientesTela;
import java.awt.Dimension;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class VendasTela extends javax.swing.JInternalFrame {

    private int linha = 0;
    private int coluna = 0;
    private double valorvenda = 0;
    private boolean codigoprod = false;
    private int codigobarras = 0;
    private int idproduto;
    private String cpfcliente;
    private int quantidadeitenstotal = 0;
    private int quantidadeprodutos = 0;
    private boolean statusvenda;
    private int contadorcarrinho = 0;
    private boolean cpfdigitado = false;
    String loginvendas;
    JDesktopPane FundoInicial;

    DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

    Date today = Calendar.getInstance().getTime();

    public VendasTela(String loginvendas, JDesktopPane FundoInicial) {
        initComponents();
        this.loginvendas = loginvendas;
        jSpinnerQuantidade.setValue(1);
        JNomeProduto.setEditable(false);
        JPreco.setEditable(false);
        JNomeCliente.setEditable(false);
        JVendaFabricante.setEditable(false);
        JGarantia.setEditable(false);
        jFormattedValorDesconto.setEditable(false);
        jFormattedValorTotal.setEditable(false);
        JFaixaEtaria.setEditable(false);
        this.FundoInicial = FundoInicial;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        JNomeProduto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        JPreco = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        JButtonAdicionarCarrinho = new javax.swing.JButton();
        JFinalizarCompra = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        JCancelarCompra = new javax.swing.JButton();
        JBPesquisarProduto = new javax.swing.JButton();
        JFaixaEtaria = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        JGarantia = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        JCodigoBarras = new javax.swing.JTextField();
        JBPesquisarCPF = new javax.swing.JButton();
        JVendaFabricante = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSpinnerQuantidade = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProdutos = new javax.swing.JTable();
        JButtonExcluir = new javax.swing.JToggleButton();
        jFormattedCPFVenda = new javax.swing.JFormattedTextField();
        jFormattedValorDesconto = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        JDataVenda = new javax.swing.JLabel();
        JNomeCliente = new javax.swing.JTextField();
        jFormattedValorTotal = new javax.swing.JFormattedTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código do Produto");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Nome Produto");

        JPreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JPrecoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Preço");

        JButtonAdicionarCarrinho.setText("Adicionar ao Carrinho");
        JButtonAdicionarCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonAdicionarCarrinhoActionPerformed(evt);
            }
        });

        JFinalizarCompra.setText("Finalizar Venda");
        JFinalizarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JFinalizarCompraActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Valor Total:");

        JCancelarCompra.setText("Cancelar Venda");
        JCancelarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCancelarCompraActionPerformed(evt);
            }
        });

        JBPesquisarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/lupa_icon.png"))); // NOI18N
        JBPesquisarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBPesquisarProdutoActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Faixa etária");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Garantia");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("CPF do cliente");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Nome Cliente");

        JBPesquisarCPF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/lupa_icon.png"))); // NOI18N
        JBPesquisarCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBPesquisarCPFActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Fabricante");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Vendas");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Quantidade");

        jTableProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Produto", "Nome Produto", "Preço R$", "Quantidade"
            }
        ));
        jScrollPane1.setViewportView(jTableProdutos);

        JButtonExcluir.setText("Excluir");
        JButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonExcluirActionPerformed(evt);
            }
        });

        try {
            jFormattedCPFVenda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Desconto");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Data da Venda");

        JNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JNomeClienteActionPerformed(evt);
            }
        });

        jFormattedValorTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JButtonAdicionarCarrinho, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jFormattedValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(215, 215, 215))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(JCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(6, 6, 6)
                                            .addComponent(JBPesquisarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(19, 19, 19)
                                            .addComponent(JNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(JPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jFormattedValorDesconto))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(92, 92, 92)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(154, 154, 154)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(81, 81, 81)
                                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(116, 116, 116)
                                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(JVendaFabricante, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(21, 21, 21)
                                                    .addComponent(JFaixaEtaria, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(JGarantia, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jSpinnerQuantidade))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jFormattedCPFVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(JBPesquisarCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(JNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(JDataVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(JFinalizarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(101, 101, 101)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(JCancelarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JButtonExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jFormattedCPFVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JBPesquisarCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JBPesquisarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(JNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(JPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jFormattedValorDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JVendaFabricante, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JFaixaEtaria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(JGarantia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSpinnerQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JButtonAdicionarCarrinho, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(JDataVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(JButtonExcluir)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JFinalizarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JCancelarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JPrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JPrecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JPrecoActionPerformed

    private void JButtonAdicionarCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonAdicionarCarrinhoActionPerformed

        ProdutoVenda selectproduto = new ProdutoVenda();
        //CadastrarProduto cadastrarproduto = new CadastrarProduto();
        Produtos produtos = new Produtos();

        AtualizarListaCarrinho atualizarcarrinho = new AtualizarListaCarrinho();

        //ENQUANTO A LISTA FOR MENOR OU IGUAL A 10 ITENS
        if (linha <= 9 && JNomeProduto != null && (Integer) jSpinnerQuantidade.getValue() >= 1 && codigoprod == true) {
            quantidadeitenstotal = quantidadeitenstotal + (Integer) jSpinnerQuantidade.getValue();

            selectproduto.SelectProduto(codigobarras, produtos, (Integer) jSpinnerQuantidade.getValue());

            atualizarcarrinho.inserirProduto(produtos);

            //DATA DA VENDA SOMENTE COM ITEM NO CARRINHO
            JDataVenda.setText(String.valueOf(today));

            //jTableProdutos.setValueAt(JIDProduto.getText(), linha, coluna);
            jTableProdutos.setValueAt(String.valueOf(produtos.getCodigobarras()), linha, coluna);
            coluna++;
            jTableProdutos.setValueAt(String.valueOf(produtos.getNomeProduto()), linha, coluna);
            coluna++;
            jTableProdutos.setValueAt(String.valueOf(produtos.getValor()), linha, coluna);
            coluna++;
            jTableProdutos.setValueAt(String.valueOf(produtos.getQuantidade()), linha, coluna);
            coluna = 0;
            linha++;
            valorvenda = valorvenda + (produtos.getValor() - produtos.getValorDesconto()) * (Integer) jSpinnerQuantidade.getValue();
            jFormattedValorTotal.setText(String.format("R$%.2f", valorvenda));

            JCodigoBarras.setText("");
            JNomeProduto.setText("");
            JNomeProduto.setText("");
            JFaixaEtaria.setText("");
            JVendaFabricante.setText("");
            JPreco.setText("");
            JGarantia.setText("");
            jFormattedValorDesconto.setText("");

            codigoprod = false;

        } else if ((Integer) jSpinnerQuantidade.getValue()
                <= 0) {

            JOptionPane.showMessageDialog(null, "Informe a Quantidade");

        } else if (linha
                == 10) {

            JOptionPane.showMessageDialog(null, "Lista com 10 itens, finalize a venda");

        } else if (JNomeProduto.getText().equals("") && codigoprod
                == false) {

            JOptionPane.showMessageDialog(null, "Pesquise pelo produto");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_JButtonAdicionarCarrinhoActionPerformed

    private void JFinalizarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JFinalizarCompraActionPerformed

        //VendasCanceladasEfetuadas vendas = new VendasCanceladasEfetuadas();
        //   Mock.VendasMock vendas = new VendasMock();
        Controller.Produtos.AtualizarListaCarrinho atualizarcarrinho = new AtualizarListaCarrinho();
        DAO.Vendas.NovaVenda novavenda = new NovaVenda();
        DAO.Vendas.ItemVenda itemvenda = new ItemVenda();
        Model.Vendas.Vendas vendasdados = new Vendas();
        Model.Clientes.Clientes clientes = new Clientes();
        String opcao = "";

        if (cpfdigitado == true && valorvenda > 0) {

            String[] opcaopagamento = {"Dinheiro", "Débito", "Crédito", "Cancelar Venda"};

            opcao = (String) JOptionPane.showInputDialog(null, "Qual a opção de Pagamento?",
                    "Opção de Pagamento", JOptionPane.QUESTION_MESSAGE, null, opcaopagamento, opcaopagamento[0]);

            if (opcao.equals("Dinheiro") || opcao.equals("Débito") || opcao.equals("Crédito")) {

                vendasdados.setCPFCliente(cpfcliente);
                vendasdados.setTotalValor(valorvenda);
                vendasdados.setDataVenda(String.valueOf(JDataVenda.getText()));
                vendasdados.setQuantidadeItensVenda(quantidadeitenstotal);
                vendasdados.setVendedor(loginvendas);

                novavenda.InsertNovaVenda(vendasdados);
                itemvenda.InsertItemTemp(atualizarcarrinho, vendasdados);

                JOptionPane.showMessageDialog(null, "Venda efetuada com Sucesso");

                //ISSO LIMPA A TABELA
                for (int i = 0; i < jTableProdutos.getRowCount(); i++) {
                    for (int j = 0; j < jTableProdutos.getColumnCount(); j++) {
                        jTableProdutos.setValueAt("", i, j);
                    }
                }
                jFormattedValorTotal.setText("");
                jSpinnerQuantidade.setValue(1);
                valorvenda = 0;

                linha = 0;
                coluna = 0;

            } else if (opcao.equals("Cancelar Venda") && cpfdigitado == true) {

                String[] confirmarcancelamento = {"Não", "Sim"};

                String opcaocancelar = (String) JOptionPane.showInputDialog(null, "Deseja realmente Cancelar?",
                        "Cancelar Venda", JOptionPane.QUESTION_MESSAGE, null, confirmarcancelamento, confirmarcancelamento[0]);
                System.out.println("to em cancelar venda");

                if (opcaocancelar.equals("Sim")) {

                    JOptionPane.showMessageDialog(null, "Venda Cancelada");

                    for (int i = 0; i < jTableProdutos.getRowCount(); i++) {
                        for (int j = 0; j < jTableProdutos.getColumnCount(); j++) {
                            jTableProdutos.setValueAt("", i, j);
                        }
                    }
                    jFormattedCPFVenda.setText("");
                    JNomeCliente.setText("");
                    jFormattedValorTotal.setText("");
                    jSpinnerQuantidade.setValue(1);
                    valorvenda = 0;

                }
                linha = 0;
                coluna = 0;
            }

        } else if (valorvenda == 0) {
            JOptionPane.showMessageDialog(null, "Nenhum produto no carrinho");

        } else if (cpfdigitado == false || clientes.getNome() == null) {
            JOptionPane.showMessageDialog(null, "Insira um CPF válido antes de finalizar a Venda");

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_JFinalizarCompraActionPerformed

    private void JCancelarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCancelarCompraActionPerformed

        String[] confirmarcancelamento = {"Não", "Sim"};

        String opcaocancelar = (String) JOptionPane.showInputDialog(null, "Deseja realmente Cancelar?",
                "Cancelar Venda", JOptionPane.QUESTION_MESSAGE, null, confirmarcancelamento, confirmarcancelamento[0]);
        System.out.println("to em cancelar venda");

        if (opcaocancelar.equals("Sim")) {

            JOptionPane.showMessageDialog(null, "Venda Cancelada");

            for (int i = 0; i < jTableProdutos.getRowCount(); i++) {
                for (int j = 0; j < jTableProdutos.getColumnCount(); j++) {
                    jTableProdutos.setValueAt("", i, j);
                }
            }
            jFormattedCPFVenda.setText("");
            JNomeCliente.setText("");
            jFormattedValorTotal.setText("");
            jSpinnerQuantidade.setValue(1);
            valorvenda = 0;

        }
        linha = 0;
        coluna = 0;

// TODO add your handling code here:
    }//GEN-LAST:event_JCancelarCompraActionPerformed

    private void JBPesquisarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBPesquisarProdutoActionPerformed

        // SelectBancoMySQL selectproduto = new SelectBancoMySQL();
        //MOCK
        //CadastrarProduto cadastrarproduto = new CadastrarProduto();
        Produtos produtos = new Produtos();

        DAO.Produtos.ProdutoVenda selectprodutovenda = new ProdutoVenda();

        do {
            try {
                codigobarras = Integer.valueOf(JCodigoBarras.getText());
                codigoprod = true;
                selectprodutovenda.SelectProduto(codigobarras, produtos, (Integer) jSpinnerQuantidade.getValue());

                if (produtos.getNomeProduto() == null) {
                    //if (listaprodutos.GetNome(idproduto) == null) {

                    String[] opcaoselecionada = {"Sim", "Não"};

                    String novocliente = (String) JOptionPane.showInputDialog(null, "Deseja cadastrar um novo produto?",
                            "Produto não cadastrado", JOptionPane.QUESTION_MESSAGE, null, opcaoselecionada, opcaoselecionada[0]);

                    //SE ESCOLHER CADASTRAR UM NOVO PRODUTO ABRE O MENU PRODUTOS
                    if (novocliente.equals("Sim")) {

                        CadastroProdutosTela controleestoque = new CadastroProdutosTela();
                        this.FundoInicial.add(controleestoque);
                        controleestoque.setVisible(true);
                        controleestoque.setResizable(false);
                        this.openFrameInCenter(controleestoque);

                        JCodigoBarras.setText("");

                    }
                } else if (produtos.getQuantidade() == 0) {

                    JOptionPane.showMessageDialog(null, "Produto sem estoque");

                } else if (produtos.getStatusProduto() == false) {
                    JOptionPane.showMessageDialog(null, "Produto inativo");

                } else {

                    produtos.setQuantidade((Integer) (jSpinnerQuantidade.getValue()));
                    JFaixaEtaria.setText(String.valueOf(produtos.getFaixaEtaria()));
                    JNomeProduto.setText(String.valueOf(produtos.getNomeProduto()));
                    JPreco.setText(String.valueOf("R$" + String.valueOf(produtos.getValor())));
                    JGarantia.setText(String.valueOf(produtos.getGarantia()));
                    JVendaFabricante.setText(String.valueOf(produtos.getFabricante()));
                    jFormattedValorDesconto.setText(String.format("R$%.2f", produtos.getValorDesconto()));

                }
            } catch (NumberFormatException erro) {
                JOptionPane.showMessageDialog(null, "Código de produto inválido");
                break;
            }
        } while (codigoprod == false);

        // TODO add your handling code here:
    }//GEN-LAST:event_JBPesquisarProdutoActionPerformed

    public void openFrameInCenter(JInternalFrame InicialFundo) {
        Dimension desktopSize = FundoInicial.getSize();
        Dimension jInternalFrameSize = InicialFundo.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        InicialFundo.setLocation(width, height);
        InicialFundo.setVisible(true);
    }

    private void JBPesquisarCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBPesquisarCPFActionPerformed

        DAO.Clientes.CPFlienteVenda selectclientevenda = new CPFlienteVenda();

        //Mock.CadastrarCliente pesquisarcadastrado = new CadastrarCliente();
        Clientes clientes = new Clientes();

        System.out.println(jFormattedCPFVenda.getText());

        do {
            try {

                //BANCO
                cpfcliente = String.valueOf(jFormattedCPFVenda.getText());
                if (!cpfcliente.equals("   .   .   -  ")) {
                    cpfdigitado = true;
                    clientes = selectclientevenda.SelectCPFCliente(cpfcliente);

                } else {
                    JOptionPane.showMessageDialog(null, "Digite um CPF");
                    break;
                }

                //MOCK
                //pesquisarcadastrado.obterClienteLista(String.valueOf(jFormattedCPFVenda.getText()));
            } catch (NumberFormatException erro) {
                break;
            }
        } while (cpfdigitado == false);

        //SE CPF NAO FOR EM BRANCO E FOR NUMERICO
        if (clientes.getNome() == null && cpfdigitado == true) {

            String[] opcaoselecionada = {"Sim", "Não"};

            String novocliente = (String) JOptionPane.showInputDialog(null, "Deseja cadastrar um novo cliente?",
                    "Cliente não cadastrado", JOptionPane.QUESTION_MESSAGE, null, opcaoselecionada, opcaoselecionada[0]);

            //SE ESCOLHER CADASTRAR UM NOVO CLIENTE ABRE O MENU CADASTRO DE CLIENTES
            if (novocliente.equals("Sim")) {

                CadastroClientesTela cadastroclientes = new CadastroClientesTela();
                this.FundoInicial.add(cadastroclientes);
                cadastroclientes.setVisible(true);
                cadastroclientes.setResizable(false);
                this.openFrameInCenter(cadastroclientes);

                jFormattedCPFVenda.setText("");

                //SE ESCOLHER NAO CADASTRAR UM CLIENTE NOVO
            } else {

                JOptionPane.showMessageDialog(null, "Insira um CPF cadastrado");

                jFormattedCPFVenda.setText("");

            }

        } else if (clientes.getStatusCliente() == false) {
            JOptionPane.showMessageDialog(null, "Cliente inativo");

        } else {

            //SE JA ESTIVER NA BASE PUXA O NOME
            JNomeCliente.setText(String.valueOf(clientes.getNome()));

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_JBPesquisarCPFActionPerformed

    private void JButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonExcluirActionPerformed

        //EXCLUIR PRODUTO DA LISTA
        if (jTableProdutos.getSelectedRow() >= 0) {

            valorvenda = 0.00;

            //Obtém a linha do item selecionado
            final int row = jTableProdutos.getSelectedRow();

            String numero = (String) jTableProdutos.getValueAt(row, 1);

            int resposta = JOptionPane.showConfirmDialog(rootPane,
                    "Excluir o produto \"" + numero + "\"?",
                    "Confirmar exclusão", JOptionPane.YES_NO_OPTION);

            if (resposta == JOptionPane.YES_OPTION) {
                try {
                    //Obtém o produto
                    //String nomeproduto = (String) jTableProdutos.getValueAt(row, 0);
                    AtualizarListaCarrinho atualizar = new AtualizarListaCarrinho();

                    atualizar.RemoverProduto(row);

                    //ISSO LIMPA A TABELA
                    for (int i = 0; i < jTableProdutos.getRowCount(); i++) {
                        for (int j = 0; j < jTableProdutos.getColumnCount(); j++) {
                            jTableProdutos.setValueAt("", i, j);
                        }
                    }

                    //SE CARRINHO ESTIVER VAZION
                    if (atualizar.TamanhoListaCarrinho() == 0) {
                        JOptionPane.showMessageDialog(null, "Carrinho Vazio");
                        valorvenda = 0.00;
                        jFormattedValorTotal.setText(String.format("R$%.2f", valorvenda));
                        linha = 0;
                        coluna = 0;

                        //ISSO ATUALIZA A TABELA DEPOIS DE EXCLUIR UM PRODUTO
                    } else {
                        linha = 0;
                        jTableProdutos.setValueAt(String.valueOf(atualizar.atualizarListaCarrinho().getCodigobarras()), linha, coluna);
                        coluna++;
                        jTableProdutos.setValueAt(String.valueOf(atualizar.atualizarListaCarrinho().getNomeProduto()), linha, coluna);
                        coluna++;
                        jTableProdutos.setValueAt(String.valueOf(atualizar.atualizarListaCarrinho().getValor()), linha, coluna);
                        coluna++;
                        jTableProdutos.setValueAt(String.valueOf(atualizar.atualizarListaCarrinho().getQuantidade()), linha, coluna);
                        coluna = 0;
                        linha++;
                        valorvenda = valorvenda + atualizar.atualizarListaCarrinho().getValor();
                        jFormattedValorTotal.setText(String.format("R$%.2f", valorvenda));

                    }

                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(rootPane, e.getMessage(),
                            "Falha na Exclusão", JOptionPane.ERROR_MESSAGE);
                }

            }

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_JButtonExcluirActionPerformed

    private void JNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JNomeClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JNomeClienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBPesquisarCPF;
    private javax.swing.JButton JBPesquisarProduto;
    private javax.swing.JButton JButtonAdicionarCarrinho;
    private javax.swing.JToggleButton JButtonExcluir;
    private javax.swing.JButton JCancelarCompra;
    private javax.swing.JTextField JCodigoBarras;
    private javax.swing.JLabel JDataVenda;
    private javax.swing.JTextField JFaixaEtaria;
    private javax.swing.JButton JFinalizarCompra;
    private javax.swing.JTextField JGarantia;
    private javax.swing.JTextField JNomeCliente;
    private javax.swing.JTextField JNomeProduto;
    private javax.swing.JTextField JPreco;
    private javax.swing.JTextField JVendaFabricante;
    private javax.swing.JFormattedTextField jFormattedCPFVenda;
    private javax.swing.JFormattedTextField jFormattedValorDesconto;
    private javax.swing.JFormattedTextField jFormattedValorTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerQuantidade;
    private javax.swing.JTable jTableProdutos;
    // End of variables declaration//GEN-END:variables

}
