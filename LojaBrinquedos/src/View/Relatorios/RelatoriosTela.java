/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Relatorios;

import Mock.CadastrarCliente;
import Mock.CadastrarProduto;
import Mock.VendasMock;
import DAO.Clientes.RelatorioClientes;
import DAO.Produtos.RelatorioProdutos;
import DAO.Vendas.RelatorioVendas;
import java.awt.Dimension;
import java.security.Provider;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;

public class RelatoriosTela extends javax.swing.JInternalFrame {

    private int tamanhoObjeto = 1000;

    Date hoje = Calendar.getInstance().getTime();

    SimpleDateFormat formato = new SimpleDateFormat("yyyy/MM/dd");

    private String coluna1 = "Coluna 1", coluna2 = "Coluna 2", coluna3 = "Coluna 3", coluna4 = "Coluna 4", coluna5 = "Coluna 5", coluna6 = "Coluna 6", coluna7 = "Coluna 7", coluna8 = "Coluna 8", coluna9 = "Coluna 9", coluna10 = "Coluna 10", coluna11 = "Coluna 11";

    public RelatoriosTela() {
        initComponents();
        jFormattedDataInicial.setText(formato.format(hoje));

        jFormattedDataFinal.setText(formato.format(hoje));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        JResultadoReport = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboRelatorios = new javax.swing.JComboBox<>();
        BotaoGerarRelatorio = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTableRelatorios = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jFormattedDataInicial = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jFormattedDataFinal = new javax.swing.JFormattedTextField();
        JResumoReport = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Relatórios");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(240, 0, 190, 40);
        getContentPane().add(JResultadoReport);
        JResultadoReport.setBounds(668, 386, 330, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Resultado");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 210, 90, 20);

        jComboRelatorios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Total de Produtos", "Total de Clientes","Total de Vendas"}));
        getContentPane().add(jComboRelatorios);
        jComboRelatorios.setBounds(220, 50, 220, 40);

        BotaoGerarRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/lupa_icon.png"))); // NOI18N
        BotaoGerarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoGerarRelatorioActionPerformed(evt);
            }
        });
        getContentPane().add(BotaoGerarRelatorio);
        BotaoGerarRelatorio.setBounds(310, 163, 60, 40);

        JTableRelatorios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [tamanhoObjeto][tamanhoObjeto],
            new String [] {
                coluna1, coluna2, coluna3, coluna4, coluna5, coluna6, coluna7, coluna8
            }
        ));
        jScrollPane2.setViewportView(JTableRelatorios);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 230, 660, 154);

        jLabel3.setText("Data Inicial  (AAAA-MM-DD)");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(150, 110, 190, 20);

        try {
            jFormattedDataInicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####/##/##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        getContentPane().add(jFormattedDataInicial);
        jFormattedDataInicial.setBounds(150, 130, 130, 40);

        jLabel4.setText("Data Final (AAAA-MM-DD)");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(410, 110, 190, 20);

        try {
            jFormattedDataFinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####/##/##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        getContentPane().add(jFormattedDataFinal);
        jFormattedDataFinal.setBounds(410, 130, 130, 40);
        getContentPane().add(JResumoReport);
        JResumoReport.setBounds(10, 415, 662, 130);

        jButton1.setText("Detalhes");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(570, 390, 100, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotaoGerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoGerarRelatorioActionPerformed

        DAO.Produtos.RelatorioProdutos relatorioproduto = new RelatorioProdutos();
        DAO.Clientes.RelatorioClientes relatoriocliente = new RelatorioClientes();
        DAO.Vendas.RelatorioVendas relatoriovendas = new RelatorioVendas();

        int quantidadeproduto = relatorioproduto.SelectQuantosProdutos();
        int quantidadecliente = relatoriocliente.SelectQuantosClientes();
        int quantidadevendas = relatoriovendas.SelectQuantidadeVendas();

        int linha = 0, coluna = 0;

        //ISSO LIMPA A TABELA
        for (int i = 0; i < JTableRelatorios.getRowCount(); i++) {
            for (int j = 0; j < JTableRelatorios.getColumnCount(); j++) {
                JTableRelatorios.setValueAt("", i, j);
            }
        }

        System.out.println(jFormattedDataFinal.getText());

        if (jFormattedDataFinal.getText().equals("    /  /  ") || jFormattedDataInicial.getText().equals("    /  /  ")) {
            JOptionPane.showMessageDialog(null, "Insira a Data de inicio e fim");
        } else {

            Date dateini = null;
            Date datefim = null;
            long segundos = 0;

            try {
                dateini = formato.parse(jFormattedDataInicial.getText());
                datefim = formato.parse(jFormattedDataFinal.getText());
                segundos = (datefim.getTime() - dateini.getTime()) / 36000;
                System.out.println(segundos + " minutos dhsuad");

            } catch (Exception e) {
                e.printStackTrace();
            }

            if (segundos <= 72000) {

                if (jComboRelatorios.getSelectedItem().equals("Total de Produtos")) {

                    //Mock.CadastrarProduto relatorioproduto = new CadastrarProduto();
                    if (quantidadeproduto == 0) {
                        JOptionPane.showMessageDialog(null, "Nenhum Produto na base");
                    } else {
                        for (int i = 1; i <= relatorioproduto.SelectQuantosProdutos(); i++) {

                            relatorioproduto.SelectProduto(i, String.valueOf(jFormattedDataInicial.getText()).replace("/", "-"), String.valueOf(jFormattedDataFinal.getText()).replace("/", "-"));
                            JTableRelatorios.setValueAt(relatorioproduto.GetcodigoBarras(), linha, coluna);
                            coluna++;
                            JTableRelatorios.setValueAt(relatorioproduto.GetNomeProduto(), linha, coluna);
                            coluna++;
                            JTableRelatorios.setValueAt(relatorioproduto.GetValor(), linha, coluna);
                            coluna++;
                            JTableRelatorios.setValueAt(relatorioproduto.GetValorDesconto(), linha, coluna);
                            coluna++;
                            JTableRelatorios.setValueAt(relatorioproduto.GetFaixaEtaria(), linha, coluna);
                            coluna++;
                            JTableRelatorios.setValueAt(relatorioproduto.GetFabricante(), linha, coluna);
                            coluna++;
                            JTableRelatorios.setValueAt(relatorioproduto.GetPrazoGarantia(), linha, coluna);
                            coluna++;
                            JTableRelatorios.setValueAt(relatorioproduto.GetQuantidade(), linha, coluna);
                            linha++;
                            coluna = 0;

                        }

                        JResumoReport.setText("Total de produtos cadastrados no período: " + String.valueOf(relatorioproduto.SelectQuantosProdutos()));

                    }

                } else if (jComboRelatorios.getSelectedItem().equals("Total de Clientes")) {

                    //Mock.CadastrarCliente relatoriocliente = new CadastrarCliente();
                    if (quantidadecliente == 0) {
                        JOptionPane.showMessageDialog(null, "Nenhum Cliente na base");
                    } else {

                        for (int i = 1; i <= relatoriocliente.SelectQuantosClientes(); i++) {

                            relatoriocliente.SelectCliente(i);
                            JTableRelatorios.setValueAt(relatoriocliente.GetNome(), linha, coluna);
                            coluna++;
                            JTableRelatorios.setValueAt(relatoriocliente.GetCPF(), linha, coluna);
                            coluna++;
                            JTableRelatorios.setValueAt(relatoriocliente.GetCPF(), linha, coluna);
                            coluna++;
                            JTableRelatorios.setValueAt(relatoriocliente.GetTelefone(), linha, coluna);
                            coluna++;
                            JTableRelatorios.setValueAt(relatoriocliente.GetCelular(), linha, coluna);
                            coluna++;
                            JTableRelatorios.setValueAt(relatoriocliente.GetEmail(), linha, coluna);
                            coluna++;
                            JTableRelatorios.setValueAt(relatoriocliente.GetEstadoCivil(), linha, coluna);
                            linha++;
                            coluna = 0;
                        }
                        JResumoReport.setText("Total de clientes cadastrados no período: " + String.valueOf(relatoriocliente.SelectQuantosClientes()));

                    }

                } else if (jComboRelatorios.getSelectedItem().equals("Total de Vendas")) {

                    //Mock.VendasMock vendasrelatorio = new VendasMock();
                    //int quantidadevendas = relatoriovendas.SelectQuantidadeVendas();
                    if (relatoriovendas.SelectQuantidadeVendas() == 0) {
                        JOptionPane.showMessageDialog(null, "Nenhuma Venda na base");
                    } else {
                        for (int i = 1; i <= quantidadevendas; i++) {

                            relatoriovendas.SelectProdutoMaisVendido();

                            relatoriovendas.SelectVendas(i, String.valueOf(jFormattedDataInicial.getText()).replace("/", "-"), String.valueOf(jFormattedDataFinal.getText()).replace("/", "-"));
                            JTableRelatorios.setValueAt(relatoriovendas.GetCPFCliente(), linha, coluna);
                            coluna++;
                            JTableRelatorios.setValueAt("R$" + relatoriovendas.GetValorVenda(), linha, coluna);
                            coluna++;
                            JTableRelatorios.setValueAt(relatoriovendas.GetDataVenda(), linha, coluna);
                            coluna++;
                            JTableRelatorios.setValueAt(relatoriovendas.GetQuantidadeItens(), linha, coluna);
                            coluna++;
                            JTableRelatorios.setValueAt(relatoriovendas.GetIDVenda(), linha, coluna);
                            linha++;
                            coluna = 0;

                        }

                        String formatoVendas = "<html>Total de vendas período: " + String.valueOf(relatoriovendas.SelectQuantidadeVendas())
                                + "<br> Nome Produto mais vendido: " + String.valueOf(relatoriovendas.GetNomeMaisVendido() + "<br>" + "ID Produto mais Vendido: " + String.valueOf(relatoriovendas.GetidMaisVendido()) + "<br>Quantidade vendida: " + relatoriovendas.GetQuantMaisVendidos()
                                        + "</html>");

                        JResumoReport.setText(formatoVendas);

                    }

                }

            } else {
                JOptionPane.showMessageDialog(null, "Período maior que 30 dias");
                System.out.println("Data inicial " + dateini);
                System.out.println("Data final " + datefim);

            }
        }

        linha = 0;

        coluna = 0;

    }//GEN-LAST:event_BotaoGerarRelatorioActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int idvenda = 0;

        String listadetalhes = "";

        if (jComboRelatorios.getSelectedItem().equals("Total de Vendas")) {

            try {

                if (JTableRelatorios.getSelectedRow() >= 0) {

                    final int row = JTableRelatorios.getSelectedRow();

                    idvenda = (Integer) JTableRelatorios.getValueAt(row, 4);

                    DAO.Vendas.RelatorioVendas detalhesvenda = new RelatorioVendas();

                    detalhesvenda.SelectQuantidadeVendasDetalhes(idvenda);

                    for (int i = 0; i < detalhesvenda.SelectQuantidadeVendasDetalhes(idvenda); i++) {
                        listadetalhes = detalhesvenda.SelectDetalhesVenda(idvenda);

                    }

                    JOptionPane.showMessageDialog(null, listadetalhes);

                }

            } catch (Exception e) {

                System.out.println("erro" + e.getMessage());
                JOptionPane.showMessageDialog(null, "Escolha uma venda na listagem");

            }

        } else {
            JOptionPane.showMessageDialog(null, "Botão se aplica apenas para relatório de Vendas");
        }

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoGerarRelatorio;
    private javax.swing.JLabel JResultadoReport;
    private javax.swing.JLabel JResumoReport;
    private javax.swing.JTable JTableRelatorios;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboRelatorios;
    private javax.swing.JFormattedTextField jFormattedDataFinal;
    private javax.swing.JFormattedTextField jFormattedDataInicial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
